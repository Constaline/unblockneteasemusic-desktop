diff --git a/node_modules/@nondanee/unblockneteasemusic/src/app.js b/node_modules/@nondanee/unblockneteasemusic/src/app.js
index 9f69d61..aab5ba8 100644
--- a/node_modules/@nondanee/unblockneteasemusic/src/app.js
+++ b/node_modules/@nondanee/unblockneteasemusic/src/app.js
@@ -16,7 +16,7 @@ const config = require('./cli.js')
 .parse(process.argv)
 
 global.address = config.address
-config.port = (config.port || '8080').split(':').map(string => parseInt(string))
+config.port = (config.port || global.DEFAULT_PORT).split(':').map(string => parseInt(string))
 const invalid = value => (isNaN(value) || value < 1 || value > 65535)
 if (config.port.some(invalid)) {
 	console.log('Port must be a number higher than 0 and lower than 65535.')
@@ -74,13 +74,19 @@ const dns = host => new Promise((resolve, reject) => require('dns').lookup(host,
 const httpdns = host => require('./request')('POST', 'https://music.httpdns.c.163.com/d', {}, host).then(response => response.json()).then(jsonBody => jsonBody.dns.reduce((result, domain) => result.concat(domain.ips), []))
 const httpdns2 = host => require('./request')('GET', 'https://httpdns.n.netease.com/httpdns/v2/d?domain=' + host).then(response => response.json()).then(jsonBody => Object.keys(jsonBody.data).map(key => jsonBody.data[key]).reduce((result, value) => result.concat(value.ip || []), []))
 
-Promise.all([httpdns, httpdns2].map(query => query(target.join(','))).concat(target.map(dns)))
-.then(result => {
-	const {host} = hook.target
-	result.forEach(array => array.forEach(host.add, host))
-	server.whitelist = server.whitelist.concat(Array.from(host).map(escape))
-	const log = type => console.log(`${['HTTP', 'HTTPS'][type]} Server running @ http://${address || '0.0.0.0'}:${port[type]}`)
-	if (port[0]) server.http.listen(port[0], address).once('listening', () => log(0))
-	if (port[1]) server.https.listen(port[1], address).once('listening', () => log(1))
-})
-.catch(error => console.log(error))
\ No newline at end of file
+let startUnblockServer = () => {
+	return Promise.all([httpdns, httpdns2].map(query => query(target.join(','))).concat(target.map(dns)))
+		.then(result => {
+			const {host} = hook.target
+			result.forEach(array => array.forEach(host.add, host))
+			server.whitelist = server.whitelist.concat(Array.from(host).map(escape))
+			const log = type => console.log(`${['HTTP', 'HTTPS'][type]} Server running @ http://${address || '0.0.0.0'}:${port[type]}`)
+			if (port[0]) server.http.listen(port[0], address).once('listening', () => log(0))
+			if (port[1]) server.https.listen(port[1], address).once('listening', () => log(1))
+		})
+		.catch(error => {
+			console.log(error)
+		})
+}
+
+module.exports = startUnblockServer;
\ No newline at end of file
diff --git a/node_modules/@nondanee/unblockneteasemusic/src/provider/migu.js b/node_modules/@nondanee/unblockneteasemusic/src/provider/migu.js
index 1af696b..849e740 100644
--- a/node_modules/@nondanee/unblockneteasemusic/src/provider/migu.js
+++ b/node_modules/@nondanee/unblockneteasemusic/src/provider/migu.js
@@ -36,14 +36,14 @@ const search = info => {
 
 const single = (id, format) => {
 	const url =
-		'http://music.migu.cn/v3/api/music/audioPlayer/getPlayInfo?' +
+		'https://music.migu.cn/v3/api/music/audioPlayer/getPlayInfo?' +
 		'dataType=2&' + crypto.miguapi.encryptBody({copyrightId: id.toString(), type: format})
 
 	return request('GET', url, headers)
 	.then(response => response.json())
 	.then(jsonBody => {
 		const {playUrl} = jsonBody.data
-		return playUrl ? encodeURI(playUrl) : Promise.reject()
+		return playUrl ? encodeURI('http:' + playUrl) : Promise.reject()
 	})
 }
 
diff --git a/node_modules/@nondanee/unblockneteasemusic/src/provider/qq.js b/node_modules/@nondanee/unblockneteasemusic/src/provider/qq.js
index bd64147..8673e0d 100644
--- a/node_modules/@nondanee/unblockneteasemusic/src/provider/qq.js
+++ b/node_modules/@nondanee/unblockneteasemusic/src/provider/qq.js
@@ -30,8 +30,8 @@ const search = info => {
 	const url =
 		'https://c.y.qq.com/soso/fcgi-bin/client_search_cp?' +
 		'ct=24&qqmusic_ver=1298&new_json=1&remoteplace=txt.yqq.center&' +
-		'searchid=46804741196796149&t=0&aggr=1&cr=1&catZhida=1&lossless=0&' +
-		'flag_qc=0&p=1&n=20&w=' + encodeURIComponent(info.keyword) + '&' +
+		't=0&aggr=1&cr=1&catZhida=1&lossless=0&flag_qc=0&p=1&n=20&w=' +
+		encodeURIComponent(info.keyword) + '&' +
 		'g_tk=5381&jsonpCallback=MusicJsonCallback10005317669353331&loginUin=0&hostUin=0&' +
 		'format=jsonp&inCharset=utf8&outCharset=utf-8&notice=0&platform=yqq&needNewCode=0'
 
